// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/pusher/pusher.proto

/*
Package pusher is a generated protocol buffer package.

It is generated from these files:
	proto/pusher/pusher.proto

It has these top-level messages:
	PingRequest
	PongResponse
	RegisterRequest
	RegisterResponse
	RegisterListRequest
	RegisterListResponse
	ChatRoomListRequest
	ChatRoomListResponse
	PushRequest
	PushResponse
	DeregisterRequest
	DeregisterResponse
*/
package pusher

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PongResponse struct {
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	Environment string `protobuf:"bytes,2,opt,name=environment" json:"environment,omitempty"`
}

func (m *PongResponse) Reset()                    { *m = PongResponse{} }
func (m *PongResponse) String() string            { return proto.CompactTextString(m) }
func (*PongResponse) ProtoMessage()               {}
func (*PongResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PongResponse) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *PongResponse) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type RegisterRequest struct {
	Ip       string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Host     string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Port     string `protobuf:"bytes,3,opt,name=port" json:"port,omitempty"`
	ApiKey   string `protobuf:"bytes,4,opt,name=api_key,json=apiKey" json:"api_key,omitempty"`
	ChatRoom string `protobuf:"bytes,5,opt,name=chat_room,json=chatRoom" json:"chat_room,omitempty"`
}

func (m *RegisterRequest) Reset()                    { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()               {}
func (*RegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RegisterRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *RegisterRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *RegisterRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *RegisterRequest) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *RegisterRequest) GetChatRoom() string {
	if m != nil {
		return m.ChatRoom
	}
	return ""
}

type RegisterResponse struct {
	ErrorCode int64  `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=error_text,json=errorText" json:"error_text,omitempty"`
	Id        uint64 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RegisterResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *RegisterResponse) GetErrorText() string {
	if m != nil {
		return m.ErrorText
	}
	return ""
}

func (m *RegisterResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RegisterListRequest struct {
	ChatRoom string `protobuf:"bytes,1,opt,name=chat_room,json=chatRoom" json:"chat_room,omitempty"`
}

func (m *RegisterListRequest) Reset()                    { *m = RegisterListRequest{} }
func (m *RegisterListRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterListRequest) ProtoMessage()               {}
func (*RegisterListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RegisterListRequest) GetChatRoom() string {
	if m != nil {
		return m.ChatRoom
	}
	return ""
}

type RegisterListResponse struct {
	RegisterList map[uint64]*RegisterRequest `protobuf:"bytes,1,rep,name=register_list,json=registerList" json:"register_list,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RegisterListResponse) Reset()                    { *m = RegisterListResponse{} }
func (m *RegisterListResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterListResponse) ProtoMessage()               {}
func (*RegisterListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RegisterListResponse) GetRegisterList() map[uint64]*RegisterRequest {
	if m != nil {
		return m.RegisterList
	}
	return nil
}

type ChatRoomListRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ChatRoomListRequest) Reset()                    { *m = ChatRoomListRequest{} }
func (m *ChatRoomListRequest) String() string            { return proto.CompactTextString(m) }
func (*ChatRoomListRequest) ProtoMessage()               {}
func (*ChatRoomListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ChatRoomListRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ChatRoomListResponse struct {
	ChatRoomList []string `protobuf:"bytes,1,rep,name=chat_room_list,json=chatRoomList" json:"chat_room_list,omitempty"`
}

func (m *ChatRoomListResponse) Reset()                    { *m = ChatRoomListResponse{} }
func (m *ChatRoomListResponse) String() string            { return proto.CompactTextString(m) }
func (*ChatRoomListResponse) ProtoMessage()               {}
func (*ChatRoomListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ChatRoomListResponse) GetChatRoomList() []string {
	if m != nil {
		return m.ChatRoomList
	}
	return nil
}

type PushRequest struct {
	ChatRoom string `protobuf:"bytes,1,opt,name=chat_room,json=chatRoom" json:"chat_room,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *PushRequest) Reset()                    { *m = PushRequest{} }
func (m *PushRequest) String() string            { return proto.CompactTextString(m) }
func (*PushRequest) ProtoMessage()               {}
func (*PushRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PushRequest) GetChatRoom() string {
	if m != nil {
		return m.ChatRoom
	}
	return ""
}

func (m *PushRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PushResponse struct {
	ErrorCode int64  `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=error_text,json=errorText" json:"error_text,omitempty"`
}

func (m *PushResponse) Reset()                    { *m = PushResponse{} }
func (m *PushResponse) String() string            { return proto.CompactTextString(m) }
func (*PushResponse) ProtoMessage()               {}
func (*PushResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PushResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *PushResponse) GetErrorText() string {
	if m != nil {
		return m.ErrorText
	}
	return ""
}

type DeregisterRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeregisterRequest) Reset()                    { *m = DeregisterRequest{} }
func (m *DeregisterRequest) String() string            { return proto.CompactTextString(m) }
func (*DeregisterRequest) ProtoMessage()               {}
func (*DeregisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeregisterRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeregisterResponse struct {
	ErrorCode int64  `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=error_text,json=errorText" json:"error_text,omitempty"`
}

func (m *DeregisterResponse) Reset()                    { *m = DeregisterResponse{} }
func (m *DeregisterResponse) String() string            { return proto.CompactTextString(m) }
func (*DeregisterResponse) ProtoMessage()               {}
func (*DeregisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeregisterResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *DeregisterResponse) GetErrorText() string {
	if m != nil {
		return m.ErrorText
	}
	return ""
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "PingRequest")
	proto.RegisterType((*PongResponse)(nil), "PongResponse")
	proto.RegisterType((*RegisterRequest)(nil), "RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "RegisterResponse")
	proto.RegisterType((*RegisterListRequest)(nil), "RegisterListRequest")
	proto.RegisterType((*RegisterListResponse)(nil), "RegisterListResponse")
	proto.RegisterType((*ChatRoomListRequest)(nil), "ChatRoomListRequest")
	proto.RegisterType((*ChatRoomListResponse)(nil), "ChatRoomListResponse")
	proto.RegisterType((*PushRequest)(nil), "PushRequest")
	proto.RegisterType((*PushResponse)(nil), "PushResponse")
	proto.RegisterType((*DeregisterRequest)(nil), "DeregisterRequest")
	proto.RegisterType((*DeregisterResponse)(nil), "DeregisterResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Pusher service

type PusherClient interface {
	// 測試連線
	Ping(ctx context.Context, in *PingRequest, opts ...client.CallOption) (*PongResponse, error)
	// 註冊server
	Register(ctx context.Context, in *RegisterRequest, opts ...client.CallOption) (*RegisterResponse, error)
	// 註冊列表
	RegisterList(ctx context.Context, in *RegisterListRequest, opts ...client.CallOption) (*RegisterListResponse, error)
	// 聊天室列表
	ChatRoomList(ctx context.Context, in *ChatRoomListRequest, opts ...client.CallOption) (*ChatRoomListResponse, error)
	// 推送訊息
	Push(ctx context.Context, in *PushRequest, opts ...client.CallOption) (*PushResponse, error)
	// 取消註冊
	Deregister(ctx context.Context, in *DeregisterRequest, opts ...client.CallOption) (*DeregisterResponse, error)
}

type pusherClient struct {
	c           client.Client
	serviceName string
}

func NewPusherClient(serviceName string, c client.Client) PusherClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "pusher"
	}
	return &pusherClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *pusherClient) Ping(ctx context.Context, in *PingRequest, opts ...client.CallOption) (*PongResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Pusher.Ping", in)
	out := new(PongResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) Register(ctx context.Context, in *RegisterRequest, opts ...client.CallOption) (*RegisterResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Pusher.Register", in)
	out := new(RegisterResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) RegisterList(ctx context.Context, in *RegisterListRequest, opts ...client.CallOption) (*RegisterListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Pusher.RegisterList", in)
	out := new(RegisterListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) ChatRoomList(ctx context.Context, in *ChatRoomListRequest, opts ...client.CallOption) (*ChatRoomListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Pusher.ChatRoomList", in)
	out := new(ChatRoomListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) Push(ctx context.Context, in *PushRequest, opts ...client.CallOption) (*PushResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Pusher.Push", in)
	out := new(PushResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) Deregister(ctx context.Context, in *DeregisterRequest, opts ...client.CallOption) (*DeregisterResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Pusher.Deregister", in)
	out := new(DeregisterResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Pusher service

type PusherHandler interface {
	// 測試連線
	Ping(context.Context, *PingRequest, *PongResponse) error
	// 註冊server
	Register(context.Context, *RegisterRequest, *RegisterResponse) error
	// 註冊列表
	RegisterList(context.Context, *RegisterListRequest, *RegisterListResponse) error
	// 聊天室列表
	ChatRoomList(context.Context, *ChatRoomListRequest, *ChatRoomListResponse) error
	// 推送訊息
	Push(context.Context, *PushRequest, *PushResponse) error
	// 取消註冊
	Deregister(context.Context, *DeregisterRequest, *DeregisterResponse) error
}

func RegisterPusherHandler(s server.Server, hdlr PusherHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Pusher{hdlr}, opts...))
}

type Pusher struct {
	PusherHandler
}

func (h *Pusher) Ping(ctx context.Context, in *PingRequest, out *PongResponse) error {
	return h.PusherHandler.Ping(ctx, in, out)
}

func (h *Pusher) Register(ctx context.Context, in *RegisterRequest, out *RegisterResponse) error {
	return h.PusherHandler.Register(ctx, in, out)
}

func (h *Pusher) RegisterList(ctx context.Context, in *RegisterListRequest, out *RegisterListResponse) error {
	return h.PusherHandler.RegisterList(ctx, in, out)
}

func (h *Pusher) ChatRoomList(ctx context.Context, in *ChatRoomListRequest, out *ChatRoomListResponse) error {
	return h.PusherHandler.ChatRoomList(ctx, in, out)
}

func (h *Pusher) Push(ctx context.Context, in *PushRequest, out *PushResponse) error {
	return h.PusherHandler.Push(ctx, in, out)
}

func (h *Pusher) Deregister(ctx context.Context, in *DeregisterRequest, out *DeregisterResponse) error {
	return h.PusherHandler.Deregister(ctx, in, out)
}

func init() { proto.RegisterFile("proto/pusher/pusher.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x55, 0xd2, 0xae, 0x5b, 0x6f, 0xd2, 0xfd, 0x5a, 0xb7, 0xd3, 0x2f, 0x04, 0x21, 0x95, 0x8c,
	0x3f, 0x7b, 0xf2, 0xa4, 0x22, 0x24, 0x04, 0xbc, 0x6d, 0x3c, 0x51, 0xa1, 0x12, 0x78, 0x2f, 0xa1,
	0xbd, 0x6a, 0x2d, 0x96, 0x38, 0xd8, 0x69, 0xb5, 0x3e, 0xf1, 0xa5, 0x90, 0xf8, 0x7a, 0xc8, 0x8e,
	0xb3, 0xba, 0x4b, 0x1e, 0x78, 0xd8, 0x53, 0xec, 0x73, 0xaf, 0xed, 0x7b, 0xce, 0xb9, 0x37, 0xf0,
	0x28, 0x17, 0xbc, 0xe0, 0x97, 0xf9, 0x46, 0xae, 0x51, 0x98, 0x0f, 0xd5, 0x58, 0xd4, 0x03, 0x6f,
	0xc6, 0xb2, 0x55, 0x8c, 0x3f, 0x37, 0x28, 0x8b, 0xe8, 0x0b, 0xf8, 0x33, 0xae, 0xb6, 0x32, 0xe7,
	0x99, 0x44, 0xf2, 0x14, 0x7c, 0x89, 0x62, 0xcb, 0x16, 0x38, 0xcf, 0x92, 0x14, 0x03, 0x67, 0xec,
	0x5c, 0x74, 0x63, 0xcf, 0x60, 0x9f, 0x92, 0x14, 0xc9, 0x18, 0x3c, 0xcc, 0xb6, 0x4c, 0xf0, 0x2c,
	0xc5, 0xac, 0x08, 0xdc, 0x32, 0xc3, 0x82, 0xa2, 0x5f, 0xf0, 0x5f, 0x8c, 0x2b, 0x26, 0x0b, 0x14,
	0xe6, 0x1d, 0x72, 0x0a, 0x2e, 0xcb, 0xcd, 0x6d, 0x2e, 0xcb, 0x09, 0x81, 0xf6, 0x9a, 0xcb, 0xea,
	0xb4, 0x5e, 0x2b, 0x2c, 0xe7, 0xa2, 0x08, 0x5a, 0x25, 0xa6, 0xd6, 0xe4, 0x7f, 0x38, 0x4e, 0x72,
	0x36, 0xff, 0x81, 0xbb, 0xa0, 0xad, 0xe1, 0x4e, 0x92, 0xb3, 0x8f, 0xb8, 0x23, 0x8f, 0xa1, 0xbb,
	0x58, 0x27, 0xc5, 0x5c, 0x70, 0x9e, 0x06, 0x47, 0x3a, 0x74, 0xa2, 0x80, 0x98, 0xf3, 0x34, 0xfa,
	0x06, 0xfd, 0x7d, 0x01, 0x86, 0xd9, 0x13, 0x00, 0x14, 0x82, 0x8b, 0xf9, 0x82, 0x2f, 0x4b, 0x5e,
	0xad, 0xb8, 0xab, 0x91, 0x2b, 0xbe, 0xb4, 0xc2, 0x05, 0xde, 0x56, 0x65, 0x95, 0xe1, 0xaf, 0x78,
	0x5b, 0xd6, 0xbf, 0xd4, 0x95, 0xb5, 0x63, 0x97, 0x2d, 0xa3, 0x09, 0x0c, 0xab, 0x17, 0xa6, 0x4c,
	0x16, 0x15, 0xcd, 0x83, 0xaa, 0x9c, 0x7b, 0x55, 0xfd, 0x71, 0x60, 0x74, 0x78, 0xc8, 0x94, 0x36,
	0x85, 0x9e, 0x30, 0xf8, 0xfc, 0x86, 0xc9, 0x22, 0x70, 0xc6, 0xad, 0x0b, 0x6f, 0xf2, 0x92, 0x36,
	0x65, 0x1f, 0x80, 0x1f, 0xb2, 0x42, 0xec, 0x62, 0x5f, 0x58, 0x50, 0xf8, 0x19, 0x06, 0xb5, 0x14,
	0xd2, 0x87, 0x96, 0xd2, 0xd0, 0xd1, 0x04, 0xd4, 0x92, 0xbc, 0x80, 0xa3, 0x6d, 0x72, 0xb3, 0x41,
	0xcd, 0xd5, 0x9b, 0xf4, 0xe9, 0x3d, 0xcb, 0xe2, 0x32, 0xfc, 0xd6, 0x7d, 0xe3, 0x44, 0xcf, 0x61,
	0x78, 0x65, 0x58, 0xd8, 0x6c, 0x4b, 0x51, 0x9c, 0x3b, 0x51, 0xde, 0xc3, 0xe8, 0x30, 0xcd, 0xf0,
	0x7b, 0x06, 0xa7, 0x77, 0xaa, 0xec, 0x09, 0x76, 0x63, 0x7f, 0x61, 0x65, 0x47, 0xd7, 0xe0, 0xcd,
	0x36, 0x72, 0xfd, 0x2f, 0x52, 0x92, 0x00, 0x8e, 0x53, 0x94, 0x32, 0x59, 0xa1, 0xb1, 0xaa, 0xda,
	0x46, 0x53, 0xf0, 0xcb, 0x5b, 0x1e, 0xc2, 0xf6, 0xe8, 0x1c, 0x06, 0xd7, 0x28, 0x1a, 0x7a, 0xd9,
	0xa6, 0x1d, 0x03, 0xb1, 0x93, 0x1e, 0xe2, 0xe1, 0xc9, 0x6f, 0x17, 0x3a, 0x33, 0x3d, 0xb7, 0xe4,
	0x1c, 0xda, 0x6a, 0x62, 0x89, 0x4f, 0xad, 0xc1, 0x0d, 0x7b, 0xf4, 0x60, 0x6e, 0x2f, 0xe1, 0xa4,
	0xf2, 0x8f, 0xd4, 0xac, 0x0c, 0x07, 0xb4, 0x36, 0x0e, 0xef, 0xc0, 0xb7, 0xbb, 0x84, 0x8c, 0x68,
	0x43, 0x3f, 0x87, 0x67, 0x8d, 0x2d, 0xa8, 0x0e, 0xdb, 0x46, 0x93, 0x11, 0x6d, 0x68, 0x8f, 0xf0,
	0x8c, 0x36, 0x76, 0x83, 0xe2, 0xb3, 0x91, 0x6b, 0xc5, 0x67, 0x6f, 0xb7, 0xe2, 0x63, 0xdb, 0xf6,
	0x1a, 0x60, 0xaf, 0x29, 0x21, 0xb4, 0xe6, 0x42, 0x38, 0xa4, 0x75, 0xd1, 0xbf, 0x77, 0xf4, 0x4f,
	0xee, 0xd5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x62, 0x6b, 0xdd, 0x01, 0x05, 0x00, 0x00,
}
