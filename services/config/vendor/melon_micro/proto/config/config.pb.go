// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/config/config.proto

/*
Package config is a generated protocol buffer package.

It is generated from these files:
	proto/config/config.proto

It has these top-level messages:
	PingRequest
	PongResponse
	ConfigRequest
	ConfigResponse
	App
	Database
	DatabaseConf
	Cache
	CacheConf
	API
	APIConf
	Conf
*/
package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PongResponse struct {
	ServiceName        string `protobuf:"bytes,20,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	CurrentEnvironment string `protobuf:"bytes,21,opt,name=current_environment,json=currentEnvironment" json:"current_environment,omitempty"`
}

func (m *PongResponse) Reset()                    { *m = PongResponse{} }
func (m *PongResponse) String() string            { return proto.CompactTextString(m) }
func (*PongResponse) ProtoMessage()               {}
func (*PongResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PongResponse) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *PongResponse) GetCurrentEnvironment() string {
	if m != nil {
		return m.CurrentEnvironment
	}
	return ""
}

type ConfigRequest struct {
}

func (m *ConfigRequest) Reset()                    { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()               {}
func (*ConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ConfigResponse struct {
	Config *Conf `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *ConfigResponse) Reset()                    { *m = ConfigResponse{} }
func (m *ConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*ConfigResponse) ProtoMessage()               {}
func (*ConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ConfigResponse) GetConfig() *Conf {
	if m != nil {
		return m.Config
	}
	return nil
}

type App struct {
	Env string `protobuf:"bytes,1,opt,name=env" json:"env,omitempty"`
}

func (m *App) Reset()                    { *m = App{} }
func (m *App) String() string            { return proto.CompactTextString(m) }
func (*App) ProtoMessage()               {}
func (*App) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *App) GetEnv() string {
	if m != nil {
		return m.Env
	}
	return ""
}

type Database struct {
	GameMaster   *DatabaseConf `protobuf:"bytes,1,opt,name=game_master,json=gameMaster" json:"game_master,omitempty"`
	GameSlave    *DatabaseConf `protobuf:"bytes,2,opt,name=game_slave,json=gameSlave" json:"game_slave,omitempty"`
	TradeMaster  *DatabaseConf `protobuf:"bytes,3,opt,name=trade_master,json=tradeMaster" json:"trade_master,omitempty"`
	TradeSlave   *DatabaseConf `protobuf:"bytes,4,opt,name=trade_slave,json=tradeSlave" json:"trade_slave,omitempty"`
	MemberMaster *DatabaseConf `protobuf:"bytes,5,opt,name=member_master,json=memberMaster" json:"member_master,omitempty"`
	MemberSlave  *DatabaseConf `protobuf:"bytes,6,opt,name=member_slave,json=memberSlave" json:"member_slave,omitempty"`
	Test         *DatabaseConf `protobuf:"bytes,7,opt,name=test" json:"test,omitempty"`
}

func (m *Database) Reset()                    { *m = Database{} }
func (m *Database) String() string            { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()               {}
func (*Database) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Database) GetGameMaster() *DatabaseConf {
	if m != nil {
		return m.GameMaster
	}
	return nil
}

func (m *Database) GetGameSlave() *DatabaseConf {
	if m != nil {
		return m.GameSlave
	}
	return nil
}

func (m *Database) GetTradeMaster() *DatabaseConf {
	if m != nil {
		return m.TradeMaster
	}
	return nil
}

func (m *Database) GetTradeSlave() *DatabaseConf {
	if m != nil {
		return m.TradeSlave
	}
	return nil
}

func (m *Database) GetMemberMaster() *DatabaseConf {
	if m != nil {
		return m.MemberMaster
	}
	return nil
}

func (m *Database) GetMemberSlave() *DatabaseConf {
	if m != nil {
		return m.MemberSlave
	}
	return nil
}

func (m *Database) GetTest() *DatabaseConf {
	if m != nil {
		return m.Test
	}
	return nil
}

// Database 資料庫設定
type DatabaseConf struct {
	Db         string `protobuf:"bytes,1,opt,name=db" json:"db,omitempty"`
	HostMaster string `protobuf:"bytes,2,opt,name=host_master,json=hostMaster" json:"host_master,omitempty"`
	HostSlave  string `protobuf:"bytes,3,opt,name=host_slave,json=hostSlave" json:"host_slave,omitempty"`
	Port       string `protobuf:"bytes,4,opt,name=port" json:"port,omitempty"`
	Username   string `protobuf:"bytes,5,opt,name=username" json:"username,omitempty"`
	Password   string `protobuf:"bytes,6,opt,name=password" json:"password,omitempty"`
}

func (m *DatabaseConf) Reset()                    { *m = DatabaseConf{} }
func (m *DatabaseConf) String() string            { return proto.CompactTextString(m) }
func (*DatabaseConf) ProtoMessage()               {}
func (*DatabaseConf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DatabaseConf) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *DatabaseConf) GetHostMaster() string {
	if m != nil {
		return m.HostMaster
	}
	return ""
}

func (m *DatabaseConf) GetHostSlave() string {
	if m != nil {
		return m.HostSlave
	}
	return ""
}

func (m *DatabaseConf) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *DatabaseConf) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *DatabaseConf) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Cache struct {
	BothMaster   *CacheConf `protobuf:"bytes,1,opt,name=both_master,json=bothMaster" json:"both_master,omitempty"`
	BothSlave    *CacheConf `protobuf:"bytes,2,opt,name=both_slave,json=bothSlave" json:"both_slave,omitempty"`
	GameMaster   *CacheConf `protobuf:"bytes,3,opt,name=game_master,json=gameMaster" json:"game_master,omitempty"`
	GameSlave    *CacheConf `protobuf:"bytes,4,opt,name=game_slave,json=gameSlave" json:"game_slave,omitempty"`
	TradeMaster  *CacheConf `protobuf:"bytes,5,opt,name=trade_master,json=tradeMaster" json:"trade_master,omitempty"`
	TradeSlave   *CacheConf `protobuf:"bytes,6,opt,name=trade_slave,json=tradeSlave" json:"trade_slave,omitempty"`
	MemberMaster *CacheConf `protobuf:"bytes,7,opt,name=member_master,json=memberMaster" json:"member_master,omitempty"`
	MemberSlave  *CacheConf `protobuf:"bytes,8,opt,name=member_slave,json=memberSlave" json:"member_slave,omitempty"`
	Test         *CacheConf `protobuf:"bytes,9,opt,name=test" json:"test,omitempty"`
}

func (m *Cache) Reset()                    { *m = Cache{} }
func (m *Cache) String() string            { return proto.CompactTextString(m) }
func (*Cache) ProtoMessage()               {}
func (*Cache) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Cache) GetBothMaster() *CacheConf {
	if m != nil {
		return m.BothMaster
	}
	return nil
}

func (m *Cache) GetBothSlave() *CacheConf {
	if m != nil {
		return m.BothSlave
	}
	return nil
}

func (m *Cache) GetGameMaster() *CacheConf {
	if m != nil {
		return m.GameMaster
	}
	return nil
}

func (m *Cache) GetGameSlave() *CacheConf {
	if m != nil {
		return m.GameSlave
	}
	return nil
}

func (m *Cache) GetTradeMaster() *CacheConf {
	if m != nil {
		return m.TradeMaster
	}
	return nil
}

func (m *Cache) GetTradeSlave() *CacheConf {
	if m != nil {
		return m.TradeSlave
	}
	return nil
}

func (m *Cache) GetMemberMaster() *CacheConf {
	if m != nil {
		return m.MemberMaster
	}
	return nil
}

func (m *Cache) GetMemberSlave() *CacheConf {
	if m != nil {
		return m.MemberSlave
	}
	return nil
}

func (m *Cache) GetTest() *CacheConf {
	if m != nil {
		return m.Test
	}
	return nil
}

// Cache 快取設定
type CacheConf struct {
	Host     string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Port     string `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *CacheConf) Reset()                    { *m = CacheConf{} }
func (m *CacheConf) String() string            { return proto.CompactTextString(m) }
func (*CacheConf) ProtoMessage()               {}
func (*CacheConf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CacheConf) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *CacheConf) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *CacheConf) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type API struct {
	Green  *APIConf `protobuf:"bytes,1,opt,name=green" json:"green,omitempty"`
	Durian *APIConf `protobuf:"bytes,2,opt,name=durian" json:"durian,omitempty"`
}

func (m *API) Reset()                    { *m = API{} }
func (m *API) String() string            { return proto.CompactTextString(m) }
func (*API) ProtoMessage()               {}
func (*API) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *API) GetGreen() *APIConf {
	if m != nil {
		return m.Green
	}
	return nil
}

func (m *API) GetDurian() *APIConf {
	if m != nil {
		return m.Durian
	}
	return nil
}

// API 資訊
type APIConf struct {
	Ip     string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Host   string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Port   string `protobuf:"bytes,3,opt,name=port" json:"port,omitempty"`
	ApiKey string `protobuf:"bytes,4,opt,name=api_key,json=apiKey" json:"api_key,omitempty"`
}

func (m *APIConf) Reset()                    { *m = APIConf{} }
func (m *APIConf) String() string            { return proto.CompactTextString(m) }
func (*APIConf) ProtoMessage()               {}
func (*APIConf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *APIConf) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *APIConf) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *APIConf) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *APIConf) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

// Conf 設定檔
type Conf struct {
	App      *App      `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Database *Database `protobuf:"bytes,2,opt,name=database" json:"database,omitempty"`
	Cache    *Cache    `protobuf:"bytes,3,opt,name=cache" json:"cache,omitempty"`
	Api      *API      `protobuf:"bytes,4,opt,name=api" json:"api,omitempty"`
}

func (m *Conf) Reset()                    { *m = Conf{} }
func (m *Conf) String() string            { return proto.CompactTextString(m) }
func (*Conf) ProtoMessage()               {}
func (*Conf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Conf) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *Conf) GetDatabase() *Database {
	if m != nil {
		return m.Database
	}
	return nil
}

func (m *Conf) GetCache() *Cache {
	if m != nil {
		return m.Cache
	}
	return nil
}

func (m *Conf) GetApi() *API {
	if m != nil {
		return m.Api
	}
	return nil
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "PingRequest")
	proto.RegisterType((*PongResponse)(nil), "PongResponse")
	proto.RegisterType((*ConfigRequest)(nil), "ConfigRequest")
	proto.RegisterType((*ConfigResponse)(nil), "ConfigResponse")
	proto.RegisterType((*App)(nil), "App")
	proto.RegisterType((*Database)(nil), "Database")
	proto.RegisterType((*DatabaseConf)(nil), "DatabaseConf")
	proto.RegisterType((*Cache)(nil), "Cache")
	proto.RegisterType((*CacheConf)(nil), "CacheConf")
	proto.RegisterType((*API)(nil), "API")
	proto.RegisterType((*APIConf)(nil), "APIConf")
	proto.RegisterType((*Conf)(nil), "Conf")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Config service

type ConfigClient interface {
	Get(ctx context.Context, in *ConfigRequest, opts ...client.CallOption) (*ConfigResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...client.CallOption) (*PongResponse, error)
}

type configClient struct {
	c           client.Client
	serviceName string
}

func NewConfigClient(serviceName string, c client.Client) ConfigClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "config"
	}
	return &configClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *configClient) Get(ctx context.Context, in *ConfigRequest, opts ...client.CallOption) (*ConfigResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Config.Get", in)
	out := new(ConfigResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) Ping(ctx context.Context, in *PingRequest, opts ...client.CallOption) (*PongResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Config.Ping", in)
	out := new(PongResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Config service

type ConfigHandler interface {
	Get(context.Context, *ConfigRequest, *ConfigResponse) error
	Ping(context.Context, *PingRequest, *PongResponse) error
}

func RegisterConfigHandler(s server.Server, hdlr ConfigHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Config{hdlr}, opts...))
}

type Config struct {
	ConfigHandler
}

func (h *Config) Get(ctx context.Context, in *ConfigRequest, out *ConfigResponse) error {
	return h.ConfigHandler.Get(ctx, in, out)
}

func (h *Config) Ping(ctx context.Context, in *PingRequest, out *PongResponse) error {
	return h.ConfigHandler.Ping(ctx, in, out)
}

func init() { proto.RegisterFile("proto/config/config.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 684 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x55, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0x6d, 0xe2, 0x9f, 0xc4, 0xe3, 0xa4, 0xfd, 0xb4, 0x1f, 0xd0, 0x50, 0xd1, 0xd2, 0x5a, 0xaa,
	0xd4, 0xaa, 0xd4, 0xa9, 0xca, 0x13, 0x44, 0x05, 0x55, 0x15, 0x02, 0x22, 0x73, 0x05, 0x37, 0xd1,
	0x3a, 0x59, 0x52, 0x0b, 0x6c, 0x2f, 0xeb, 0x4d, 0x50, 0xc5, 0x63, 0xf0, 0x16, 0xbc, 0x0e, 0x2f,
	0x84, 0x76, 0x77, 0xe2, 0xda, 0xb1, 0xaf, 0xea, 0x39, 0xe7, 0x74, 0xe6, 0x64, 0xe7, 0xd8, 0x0b,
	0xcf, 0xb9, 0xc8, 0x65, 0x3e, 0x9e, 0xe7, 0xd9, 0xd7, 0x64, 0x89, 0x7f, 0x42, 0x8d, 0x05, 0x43,
	0xf0, 0xa7, 0x49, 0xb6, 0x8c, 0xd8, 0x8f, 0x15, 0x2b, 0x64, 0x10, 0xc3, 0x60, 0x9a, 0xab, 0xb2,
	0xe0, 0x79, 0x56, 0x30, 0x72, 0x02, 0x83, 0x82, 0x89, 0x75, 0x32, 0x67, 0xb3, 0x8c, 0xa6, 0x6c,
	0xf4, 0xe4, 0xb8, 0x73, 0xe6, 0x45, 0x3e, 0x62, 0x1f, 0x68, 0xca, 0xc8, 0x18, 0xfe, 0x9f, 0xaf,
	0x84, 0x60, 0x99, 0x9c, 0xb1, 0x6c, 0x9d, 0x88, 0x3c, 0x4b, 0x59, 0x26, 0x47, 0x4f, 0xb5, 0x92,
	0x20, 0xf5, 0xf6, 0x91, 0x09, 0xf6, 0x60, 0x78, 0xa3, 0x2d, 0x6c, 0x86, 0x8e, 0x61, 0x77, 0x03,
	0xe0, 0xd8, 0x43, 0x70, 0x8d, 0xcb, 0x51, 0xe7, 0xb8, 0x73, 0xe6, 0x5f, 0x3b, 0xa1, 0x12, 0x44,
	0x08, 0x06, 0xfb, 0x60, 0x4d, 0x38, 0x27, 0xff, 0x81, 0xc5, 0xb2, 0xb5, 0x96, 0x78, 0x91, 0x7a,
	0x0c, 0xfe, 0x76, 0xa1, 0xff, 0x86, 0x4a, 0x1a, 0xd3, 0x82, 0x91, 0x10, 0xfc, 0x25, 0x4d, 0xd9,
	0x2c, 0xa5, 0x85, 0x64, 0x02, 0x3b, 0x0d, 0xc3, 0x0d, 0xaf, 0x3b, 0x82, 0x52, 0xbc, 0xd7, 0x02,
	0xf2, 0x0a, 0x74, 0x35, 0x2b, 0xbe, 0xd3, 0x35, 0x1b, 0x75, 0xdb, 0xe4, 0x9e, 0x12, 0x7c, 0x52,
	0x3c, 0xb9, 0x82, 0x81, 0x14, 0x74, 0x51, 0xb6, 0xb7, 0xda, 0xf4, 0xbe, 0x96, 0x60, 0xff, 0x10,
	0x4c, 0x89, 0x03, 0xec, 0x56, 0x3f, 0x5a, 0x61, 0x26, 0x5c, 0xc3, 0x30, 0x65, 0x69, 0xcc, 0xc4,
	0x66, 0x84, 0xd3, 0xf6, 0x1f, 0x03, 0xa3, 0xc1, 0x19, 0x57, 0x80, 0x35, 0x0e, 0x71, 0x5b, 0x5d,
	0x19, 0x89, 0x99, 0x72, 0x02, 0xb6, 0x64, 0x85, 0x1c, 0xf5, 0xda, 0x94, 0x9a, 0x0a, 0xfe, 0x74,
	0x60, 0x50, 0x85, 0xc9, 0x2e, 0x74, 0x17, 0x31, 0x9e, 0x7b, 0x77, 0x11, 0x93, 0x97, 0xe0, 0xdf,
	0xe7, 0x85, 0xdc, 0xf8, 0xec, 0x6a, 0x02, 0x14, 0x84, 0xb6, 0x0e, 0x41, 0x57, 0x68, 0xca, 0xd2,
	0xbc, 0xa7, 0x10, 0xe3, 0x81, 0x80, 0xcd, 0x73, 0x21, 0xf5, 0x91, 0x78, 0x91, 0x7e, 0x26, 0x07,
	0xd0, 0x5f, 0x15, 0x4c, 0xe8, 0xd4, 0x39, 0x1a, 0x2f, 0x6b, 0xc5, 0x71, 0x5a, 0x14, 0x3f, 0x73,
	0xb1, 0xd0, 0xbf, 0xd0, 0x8b, 0xca, 0x3a, 0xf8, 0x6d, 0x81, 0x73, 0x43, 0xe7, 0xf7, 0x8c, 0x5c,
	0x80, 0x1f, 0xe7, 0xf2, 0xbe, 0xbe, 0x7f, 0x08, 0x35, 0x69, 0x0e, 0x5b, 0xd1, 0xe8, 0xf0, 0x1c,
	0x74, 0x55, 0x5b, 0x7e, 0x55, 0xeb, 0x29, 0xd6, 0xb8, 0xbd, 0xa8, 0xe7, 0xca, 0x6a, 0xf6, 0xad,
	0x84, 0xea, 0xbc, 0x16, 0x2a, 0xbb, 0xd9, 0xf7, 0x31, 0x51, 0x97, 0x5b, 0x89, 0x72, 0x1a, 0xe2,
	0x5a, 0x9c, 0x2e, 0xea, 0x71, 0x72, 0x9b, 0x36, 0x2a, 0x59, 0x1a, 0x6f, 0x67, 0xa9, 0xd7, 0x90,
	0xd7, 0x83, 0x74, 0xb9, 0x15, 0xa4, 0x7e, 0xd3, 0x4c, 0x35, 0x45, 0x47, 0x98, 0x22, 0xaf, 0x21,
	0x33, 0x11, 0xfa, 0x08, 0x5e, 0x09, 0xa9, 0x75, 0xab, 0xdd, 0x63, 0x80, 0xf4, 0x73, 0x19, 0x81,
	0x6e, 0x3d, 0x02, 0xe5, 0x9a, 0xad, 0xad, 0x35, 0xdf, 0x82, 0x35, 0x99, 0xde, 0x91, 0x23, 0x70,
	0x96, 0x82, 0xb1, 0x0c, 0xb7, 0xdb, 0x0f, 0x27, 0xd3, 0x3b, 0x3d, 0xd6, 0xc0, 0xe4, 0x18, 0xdc,
	0xc5, 0x4a, 0x24, 0x34, 0xc3, 0x95, 0x3e, 0x0a, 0x10, 0x0f, 0xbe, 0x40, 0x0f, 0x21, 0x15, 0xeb,
	0x84, 0x6f, 0x62, 0x9d, 0xf0, 0xd2, 0x67, 0xb7, 0xc5, 0xa7, 0x55, 0xf1, 0xb9, 0x0f, 0x3d, 0xca,
	0x93, 0xd9, 0x37, 0xf6, 0x80, 0x09, 0x76, 0x29, 0x4f, 0xde, 0xb1, 0x87, 0xe0, 0x17, 0xd8, 0xba,
	0xf1, 0x33, 0xb0, 0x28, 0xe7, 0xe8, 0xd1, 0x0e, 0x27, 0x9c, 0x47, 0x0a, 0x20, 0xa7, 0xd0, 0x5f,
	0xe0, 0x7b, 0x85, 0xfe, 0xbc, 0xf2, 0xfd, 0x8b, 0x4a, 0x8a, 0xbc, 0x00, 0x67, 0xae, 0x0e, 0x0f,
	0xa3, 0xe6, 0x9a, 0xd3, 0x8d, 0x0c, 0x68, 0x9a, 0x27, 0x18, 0x2d, 0x5b, 0xfd, 0x3e, 0xd5, 0x3c,
	0xb9, 0xfe, 0x0c, 0xae, 0xf9, 0xaa, 0x92, 0x33, 0xb0, 0x6e, 0x99, 0x24, 0xbb, 0x61, 0xed, 0xb3,
	0x7b, 0xb0, 0x17, 0xd6, 0xbf, 0xba, 0xc1, 0x0e, 0x39, 0x05, 0x5b, 0xdd, 0x06, 0x64, 0x10, 0x56,
	0x2e, 0x85, 0x83, 0x61, 0x58, 0xbd, 0x13, 0x82, 0x9d, 0xd8, 0xd5, 0x77, 0xc7, 0xeb, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xe6, 0xf3, 0x88, 0x36, 0x58, 0x06, 0x00, 0x00,
}
